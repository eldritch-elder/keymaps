/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

&sk {
    quick-release;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS BSPC LSHFT RSHFT>;
};

/ {
    combos {
        compatible = "zmk,combos";
        /*
         0  1  2  3  4  5 ||  6  7  8  9 10 11
        12 13 14 15 16 17 || 18 19 20 21 22 23
           24 25 26 27 28 || 29 30 31 32 33
                 34 35 36 37 38 39 40
        */

        // mods ----------------------------------------------------------
        combo_sk_lctl {
            timeout-ms = <40>;
            key-positions = <25 26>;
            bindings = <&sk LCTRL>;
        };

        combo_sk_lsft {
            timeout-ms = <40>;
            key-positions = <8 9>;
            bindings = <&sk LSHIFT>;
        };

        combo_sk_lalt {
            timeout-ms = <40>;
            key-positions = <31 32>;
            bindings = <&sk LALT>;
        };

        combo_caps_word {
            timeout-ms = <40>;
            key-positions = <16 19>;
            bindings = <&caps_word>;
        };

        // control and whitespace ----------------------------------------
        combo_backspace {
            timeout-ms = <40>;
            key-positions = <19 20>;
            bindings = <&kp BACKSPACE>;
        };

        combo_word_backspace {
            timeout-ms = <40>;
            key-positions = <19 20 21>;
            bindings = <&kp LS(BACKSPACE)>;
        };

        combo_delete {
            timeout-ms = <40>;
            key-positions = <15 16>;
            bindings = <&kp DELETE>;
        };

        combo_escape {
            timeout-ms = <40>;
            key-positions = <13 16>;
            bindings = <&kp ESC>;
        };

        // umlaut and the likes ------------------------------------------
        combo_ae {
            timeout-ms = <40>;
            key-positions = <25 27>;
            bindings = <&kp RA(A)>;
        };

        combo_ue {
            timeout-ms = <40>;
            key-positions = <30 32>;
            bindings = <&kp RA(U)>;
        };

        combo_oe {
            timeout-ms = <40>;
            key-positions = <30 33>;
            bindings = <&kp RA(O)>;
        };

        // symbols -------------------------------------------------------
        combo_lparen {
            timeout-ms= <40>;
            key-positions = <2 16>;
            bindings = <&kp LPAR>;
        };

        combo_rparen {
            timeout-ms = <40>;
            key-positions = <19 9>;
            bindings = <&kp RPAR>;
        };

        combo_lbracket {
            timeout-ms = <35>;
            key-positions = <14 16>;
            bindings = <&kp LBKT>;
        };

        combo_rbracket {
            timeout-ms = <35>;
            key-positions = <19 21>;
            bindings = <&kp RBKT>;
        };

        combo_lbrace {
            timeout-ms = <40>;
            key-positions = <3 16>;
            bindings = <&kp LBRC>;
        };

        combo_rbrace {
            timeout-ms = <40>;
            key-positions = <19 8>;
            bindings = <&kp RBRC>;
        };

        combo_langlebr {
            timeout-ms = <40>;
            key-positions = <25 16>;
            bindings = <&kp LESS_THAN>;
        };

        combo_ranglebr {
            timeout-ms = <40>;
            key-positions = <19 32>;
            bindings = <&kp GREATER_THAN>;
        };

        combo_exclaim {
            timeout-ms = <50>;
            key-positions = <2 3 16>;
            bindings = <&kp EXCL>;
        };

        combo_question {
            timeout-ms = <50>;
            key-positions = <14 15 4>;
            bindings = <&kp QMARK>;
        };

        combo_colon {
            timeout-ms = <40>;
            key-positions = <6 7>;
            bindings = <&kp COLON>;
        };

        combo_semi {
            timeout-ms = <40>;
            key-positions = <30 31>;
            bindings = <&kp SEMI>;
        };

        combo_equal {
            timeout-ms = <40>;
            key-positions = <7 8>;
            bindings = <&kp EQUAL>;
        };

        combo_grave {
            timeout-ms = <40>;
            key-positions = <9 10>;
            bindings = <&kp GRAVE>;
        };

        combo_tilde {
            timeout-ms = <40>;
            key-positions = <32 33>;
            bindings = <&kp TILDE>;
        };

        combo_dquote {
            timeout-ms = <40>;
            key-positions = <7 10>;
            bindings = <&kp DQT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            /* | ××× | ××× | w  | f   | p | b   || j   | . | /   | ' | ××× | ××× |
               | z   | a   | r  | s   | d | m   || ,   | n | e   | i | o   | q   |
                     | x   | g  | l   | c | v   || -   | h | u   | y | k   |
                                | × 1 | t | ret || tab | ␣ | × 2 |                 */
            bindings = <
        &none &none &kp W &kp F &kp P &kp B   /**/       &kp J     &kp DOT   &kp SLASH &kp SQT &none &none
        &kp Z &kp A &kp R &kp S &kp D &kp M   /**/       &kp COMMA &kp N     &kp E     &kp I   &kp O &kp Q
              &kp X &kp G &kp L &kp C &kp V   /**/       &kp MINUS &kp H     &kp U     &kp Y   &kp K
                          &mo 1 &kp T &kp RET &kp C_MUTE &kp TAB   &kp SPACE &mo 2
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        raise_layer {
            /* | --- | % | $ | #   | @   | !   || 7   | 8 | 9   | -   | /   | --- |
               | --- | ) | ( | *   | &   | ^   || 4   | 5 | 6   | +   | *   | --- |
                     | \ | | | --- | --- | --- || 1   | 2 | 3   | --- | --- |
                             | --- | --- | --- || --- | 0 | --- |                   */
            bindings = <
        &trans &kp PRCNT &kp DLLR &kp HASH  &kp AT   &kp EXCL  /**/   &kp N7 &kp N8 &kp N9 &kp KP_MINUS &kp KP_SLASH     &trans
        &trans &kp RPAR  &kp LPAR &kp ASTRK &kp AMPS &kp CARET /**/   &kp N4 &kp N5 &kp N6 &kp KP_PLUS  &kp KP_ASTERISK  &trans
               &kp BSLH  &kp PIPE &trans    &trans   &trans    /**/   &kp N1 &kp N2 &kp N3 &trans       &trans
                                  &trans    &trans   &trans    &trans &trans &kp N0 &trans
            >;
        };

        lower_layer {
            /* | --- | print | --- | --- | --- | --- || prev | pause | next | ---   | --- | --- |
               | --- | ---   | --- | --- | --- | --- || left | down  | up   | right | --- | --- |
                     | ---   | --- | --- | --- | --- || ---  | ---   | ---  | ---   | --- |
                                   | --- | --- | --- || × 3  | ---   | ---  |                     */
            bindings = <
        &trans &kp PSCRN &trans &trans &trans &trans /**/   &kp C_PREV &kp C_PP &kp C_NEXT &trans    &trans &trans
        &trans &trans    &trans &trans &trans &trans /**/   &kp LEFT   &kp DOWN &kp UP     &kp RIGHT &trans &trans
               &trans    &trans &trans &trans &trans /**/   &trans     &trans   &trans     &trans    &trans
                                &trans &trans &trans &trans &mo 3      &trans   &trans
            >;
        };

        adjust_layer {
            /* | ××× | ××× | ××× | ×××   | ×××    | ××× || ××× | ××× | ××× | ××× | ××× | ××× |
               | ××× | ××× | ××× | ×××   | ×××    | ××× || ××× | ××× | ××× | ××× | ××× | ××× |
                     | ××× | ××× | ×××   | ×××    | ××× || ××× | ××× | ××× | ××× | ××× |
                                 | reset | reload | ××× || ××× | ××× | ××× |                   */
            bindings = <
        &none &none &none &none       &none      &none /**/  &none &none &none &none &none &none
        &none &none &none &none       &none      &none /**/  &none &none &none &none &none &none
              &none &none &none       &none      &none /**/  &none &none &none &none &none
                          &bootloader &sys_reset &none &none &none &none &none
            >;
        };
    };
};
